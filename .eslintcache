[{"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\index.tsx":"1","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\App.tsx":"3","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\posts\\Posts.tsx":"4","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\posts\\post\\posts.tsx":"5","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\Form\\form.tsx":"6","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\styles.ts":"7","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\posts\\styles.ts":"8","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\Form\\stlyes.ts":"9","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\reducers\\index.ts":"10","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\reducers\\posts.ts":"11","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\actions\\posts.ts":"12","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\api\\index.ts":"13","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\base64.tsx":"14","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\posts\\post\\styles.ts":"15"},{"size":709,"mtime":1613123900642,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":1587,"mtime":1613123946382,"results":"19","hashOfConfig":"17"},{"size":1012,"mtime":1612808256532,"results":"20","hashOfConfig":"17"},{"size":2727,"mtime":1613124139139,"results":"21","hashOfConfig":"17"},{"size":3050,"mtime":1613124077816,"results":"22","hashOfConfig":"17"},{"size":394,"mtime":1607879653207,"results":"23","hashOfConfig":"17"},{"size":280,"mtime":1613128343675,"results":"24","hashOfConfig":"17"},{"size":465,"mtime":1610115093467,"results":"25","hashOfConfig":"17"},{"size":123,"mtime":1608403500079,"results":"26","hashOfConfig":"17"},{"size":822,"mtime":1613124255464,"results":"27","hashOfConfig":"17"},{"size":1457,"mtime":1613068826952,"results":"28","hashOfConfig":"17"},{"size":731,"mtime":1613128082236,"results":"29","hashOfConfig":"17"},{"size":1264,"mtime":1613124171957,"results":"30","hashOfConfig":"17"},{"size":1046,"mtime":1613128413006,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"hp6eke",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\index.tsx",[],["68","69"],"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\App.tsx",["70","71"],"import React, {useEffect, useState} from 'react';\nimport Posts from \"./components/posts/Posts\";\nimport {getPosts} from \"./actions/posts\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Form from \"./components/Form/form\";\nimport {Container, AppBar, Typography, Grid, Grow} from \"@material-ui/core\"\nimport useStyles from \"./styles\";\n\nconst App  = () =>{\n  const [currentId, setCurrentId] = useState(null);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const state = useSelector((state : any) => state.posts)\n\n useEffect(()=>{ dispatch(getPosts());}, []);\n  \n\n // this is because i can't nest jsx elements normally with @material-ui in typescript so i have to put them as a child\n  let childA :JSX.Element= <><AppBar position=\"static\" color=\"inherit\" className={classes.appBar}>\n                <Typography variant=\"h2\" align=\"center\" className={classes.heading}>Social</Typography>\n                </AppBar>\n                <Grow in={true} children={\n                <Container maxWidth=\"lg\" children={\n                <Grid container={true} justify=\"space-between\" alignItems=\"stretch\" spacing={3} children={<>\n                <Grid item={true} xs={12} sm={7} children={\n                <Posts setCurrentId={setCurrentId}/>}/>\n                <Grid item={true} xs={12} sm={4} children={\n                <Form currentId={currentId} setCurrentId={setCurrentId}/>}/>\n                </>\n                }/>\n                }/>\n                }/>\n                </>\n  return(\n    <Container maxWidth=\"lg\" children={childA}/>\n  );\n  \n}\n\nexport default App;\n","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\posts\\Posts.tsx",[],"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\posts\\post\\posts.tsx",["72","73"],"import React, { useEffect } from \"react\";\r\nimport {Card, CardActions, CardContent, CardMedia, Button, Typography} from \"@material-ui/core\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport useStyles from \"./styles\";\r\nimport {PostMessage} from \"../../../types\"\r\nimport moment from \"moment\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {deletePost, getPosts, likePost} from \"../../../actions/posts\"\r\n \r\n\r\ndeclare interface Props {\r\n post: PostMessage;   \r\n setCurrentId : Function;\r\n}\r\n\r\nconst Post = (props: Props) =>{\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const state = useSelector((state : any) => state.posts)\r\n\r\n    useEffect(() => { dispatch(getPosts());}, [])\r\n\r\n    return(\r\n        <Card className={classes.card}>\r\n            \r\n            <CardMedia className={classes.media} image={props.post.selectedFile} title={props.post.title}/>\r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">{props.post.creator}</Typography>\r\n                <Typography variant=\"body2\">{moment(props.post.createdDate).fromNow()}</Typography>\r\n            </div>\r\n            \r\n            <div className={classes.overlay2}>\r\n                <Button style={{color : \"white\"}} size=\"small\" onClick={()=> {props.setCurrentId(props.post.id)}}>\r\n                    <MoreHorizIcon fontSize=\"default\"/>\r\n                </Button>\r\n            </div>\r\n            \r\n            <div className={classes.details}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">{props.post.tags.split(\",\").map((t : string) => `#${t}`).join(\"\")}</Typography>\r\n            </div>\r\n            \r\n            <Typography className={classes.title} variant=\"h5\" gutterBottom={true}>{props.post.title}</Typography>\r\n            \r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{props.post.message}</Typography> \r\n            </CardContent>\r\n            \r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(props.post.id))}>\r\n                    <ThumbUpAltIcon fontSize=\"small\"/>\r\n                     &nbsp; Likes {props.post.likeCount} \r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => {dispatch(deletePost(props.post.id))}}>\r\n                    <DeleteIcon fontSize=\"small\">Delete</DeleteIcon>\r\n                </Button>\r\n            </CardActions>           \r\n        \r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Post","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\Form\\form.tsx",["74"],"import React, {useState, useEffect} from \"react\";\r\nimport useStyles from \"./stlyes\"\r\nimport {TextField, Typography, Button, Paper} from \"@material-ui/core\";\r\nimport FileBase from \"../base64\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {createPost, updatePost} from \"../../actions/posts\"\r\n\r\n// TODO: keep code dry and move this into a declaration file\r\ndeclare interface PropsType{\r\n    currentId?: string | number | null,\r\n    setCurrentId : Function;\r\n}\r\n\r\nconst Form = (props: PropsType) :JSX.Element =>{\r\n    const [postData, setpostData] = useState({creator: \"\",title: \"\", message: \"\", tags: \"\", selectedFile: \"\",});\r\n    const classes = useStyles();\r\n    const post = useSelector((state: any) => props.currentId ? state.posts.find((p: any)=> p.id === props.currentId ) : null)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (post) setpostData(post);\r\n        console.log(props.currentId);\r\n    }, [post])\r\n\r\n    const handleSubmit = (e : React.FormEvent) => {\r\n        e.preventDefault();\r\n\r\n        if (props.currentId){\r\n            dispatch(updatePost(props.currentId, postData));\r\n            \r\n        } else{\r\n            dispatch(createPost(postData));\r\n        }\r\n\r\n        clear()\r\n\r\n    };\r\n\r\n    const clear = () => {\r\n        props.setCurrentId(null);\r\n        setpostData({creator: \"\",title: \"\", message: \"\", tags: \"\", selectedFile: \"\",})\r\n    };\r\n\r\n    return(\r\n        <Paper className ={classes.paper}>\r\n            \r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n            <Typography variant=\"h6\">{props.currentId ? \"Editing\" : \"Creating\"} Creating a post</Typography>\r\n            \r\n            <TextField name= \"creator\" variant=\"outlined\" label=\"Creator\" fullWidth={true} value={postData.creator} onChange={(e) => setpostData({...postData, creator: e.target.value})}/>\r\n            <TextField name= \"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setpostData({...postData, title: e.target.value})}/>\r\n            <TextField name= \"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setpostData({...postData, message: e.target.value})}/>\r\n            <TextField name= \"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setpostData({...postData, tags: e.target.value})}/>\r\n            \r\n            <div className={classes.fileInput}>\r\n                <FileBase multiple={false}  onDone={({base64} :any) => setpostData({...postData, selectedFile: base64})}></FileBase>\r\n            </div>\r\n        \r\n            <Button className={classes.buttonSubmit} variant=\"contained\" size=\"large\" color=\"primary\" type=\"submit\" fullWidth={true}>Submit</Button>\r\n            <Button className={classes.buttonSubmit} variant=\"contained\" size=\"small\" color=\"primary\" onClick={clear} fullWidth={true}>Clear</Button>\r\n\r\n            </form>\r\n        </Paper>\r\n        );\r\n}\r\nexport default Form;\r\n","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\styles.ts",[],"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\posts\\styles.ts",[],"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\Form\\stlyes.ts",[],"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\reducers\\index.ts",[],"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\reducers\\posts.ts",["75","76"],"import Posts from \"../components/posts/Posts\";\r\nimport { PostMessage, ActionType } from \"../types\";\r\n\r\nconst reducer = (posts: any[] = [], action: ActionType): any[] => {\r\n  switch (action.type) {\r\n    case \"FETCH_ALL\":\r\n      return action.payload;\r\n\r\n    case \"CREATE\":\r\n      return [...posts, action.payload];\r\n\r\n    // because `updating` and `liking` post is the same they both share thesame procedure\r\n    case \"UPDATE\":\r\n    case \"LIKE\":\r\n      return posts.map((post: any) =>\r\n        post.id === action.payload.id ? action.payload : post\r\n      );\r\n\r\n    case \"DELETE\":\r\n      console.log(action.id);\r\n      // console.log(posts.filter((post) => post.id == action.payload.id));\r\n      return posts.filter((post) => post.id !== action.id);\r\n\r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\actions\\posts.ts",[],"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\api\\index.ts",[],"C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\base64.tsx",["77","78","79"],"import React, {useState} from 'react';\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// TODO: keep code dry and move this into a declaration\r\ndeclare interface Props{\r\n    multiple?: true | false,\r\n    onDone: Function,\r\n}\r\n\r\nconst FileBase = (props : Props) =>{\r\n    const [files, fileState] = useState({});\r\n    const handleChange = (e: any) =>{\r\n\r\n    let files = e.target.files;\r\n\r\n    // Process each file\r\n    var allFiles : any = [];\r\n    for (var i = 0; i < files.length; i++) {\r\n\r\n      let file = files[i];\r\n\r\n      let reader = new FileReader();\r\n\r\n      // Convert the file to base64 text\r\n      reader.readAsDataURL(file);\r\n\r\n      reader.onload = () => {\r\n\r\n        let fileInfo = {\r\n          name: file.name,\r\n          type: file.type,\r\n          size: Math.round(file.size / 1000) + ' kB',\r\n          base64: reader.result,\r\n          file: file,\r\n        };\r\n\r\n        allFiles.push(fileInfo);\r\n\r\n        if(allFiles.length === files.length){\r\n          if(props.multiple) props.onDone(allFiles);\r\n          else props.onDone(allFiles[0]);\r\n        }\r\n\r\n      } \r\n\r\n    } \r\n    }\r\n    return (\r\n      <input\r\n        type=\"file\"\r\n        onChange={ (e) => handleChange(e) }\r\n        multiple={ props.multiple } />\r\n    );\r\n}\r\n export default FileBase;\r\n","C:\\Users\\rheen\\Documents\\Web_Development\\New folder\\client\\src\\components\\posts\\post\\styles.ts",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":13,"column":9,"nodeType":"86","messageId":"87","endLine":13,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":15,"column":42,"nodeType":"90","endLine":15,"endColumn":44,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"85","line":21,"column":11,"nodeType":"86","messageId":"87","endLine":21,"endColumn":16},{"ruleId":"88","severity":1,"message":"89","line":23,"column":47,"nodeType":"90","endLine":23,"endColumn":49,"suggestions":"92"},{"ruleId":"88","severity":1,"message":"93","line":23,"column":8,"nodeType":"90","endLine":23,"endColumn":14,"suggestions":"94"},{"ruleId":"84","severity":1,"message":"95","line":1,"column":8,"nodeType":"86","messageId":"87","endLine":1,"endColumn":13},{"ruleId":"84","severity":1,"message":"96","line":2,"column":10,"nodeType":"86","messageId":"87","endLine":2,"endColumn":21},{"ruleId":"84","severity":1,"message":"97","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":16},{"ruleId":"84","severity":1,"message":"98","line":11,"column":12,"nodeType":"86","messageId":"87","endLine":11,"endColumn":17},{"ruleId":"84","severity":1,"message":"99","line":11,"column":19,"nodeType":"86","messageId":"87","endLine":11,"endColumn":28},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"@typescript-eslint/no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["102"],["103"],"React Hook useEffect has a missing dependency: 'props.currentId'. Either include it or remove the dependency array.",["104"],"'Posts' is defined but never used.","'PostMessage' is defined but never used.","'ReactDOM' is defined but never used.","'files' is assigned a value but never used.","'fileState' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"105","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [dispatch]",{"range":"110","text":"111"},{"range":"112","text":"111"},"Update the dependencies array to be: [post, props.currentId]",{"range":"113","text":"114"},[582,584],"[dispatch]",[850,852],[948,954],"[post, props.currentId]"]